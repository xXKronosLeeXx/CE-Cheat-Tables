<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"弹药"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : rerev2.exe
  Version: 
  Date   : 2024-10-01
  Author : krono

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,rerev2.exe,8B 00 89 47 0C 5F 5E 59 C2 08 00 CC CC 53) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov eax,[eax]
  nop//  mov [edi+0C],eax
  jmp return

code:
  mov eax,[eax]
  mov [edi+0C],eax
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 00 89 47 0C

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: rerev2.exe+313583

rerev2.exe+31356B: 8B 00        - mov eax,[eax]
rerev2.exe+31356D: 89 47 0C     - mov [edi+0C],eax
rerev2.exe+313570: 5F           - pop edi
rerev2.exe+313571: 5E           - pop esi
rerev2.exe+313572: 59           - pop ecx
rerev2.exe+313573: C2 08 00     - ret 0008
rerev2.exe+313576: 8D 44 24 08  - lea eax,[esp+08]
rerev2.exe+31357A: 8D 74 24 14  - lea esi,[esp+14]
rerev2.exe+31357E: 3B D1        - cmp edx,ecx
rerev2.exe+313580: 0F 4E C6     - cmovle eax,esi
// ---------- INJECTING HERE ----------
rerev2.exe+313583: 8B 00        - mov eax,[eax]
// ---------- DONE INJECTING  ----------
rerev2.exe+313585: 89 47 0C     - mov [edi+0C],eax
rerev2.exe+313588: 5F           - pop edi
rerev2.exe+313589: 5E           - pop esi
rerev2.exe+31358A: 59           - pop ecx
rerev2.exe+31358B: C2 08 00     - ret 0008
rerev2.exe+31358E: CC           - int 3 
rerev2.exe+31358F: CC           - int 3 
rerev2.exe+313590: 53           - push ebx
rerev2.exe+313591: 8B 5C 24 08  - mov ebx,[esp+08]
rerev2.exe+313595: 57           - push edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"道具"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : rerev2.exe
  Version: 
  Date   : 2024-10-01
  Author : krono

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,rerev2.exe,2B C7 89 46 0C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  nop//  sub eax,edi
  mov [esi+0C],eax
  jmp return

code:
  sub eax,edi
  mov [esi+0C],eax
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 2B C7 89 46 0C

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: rerev2.exe+5951D4

rerev2.exe+5951B9: 3B C7           - cmp eax,edi
rerev2.exe+5951BB: 76 57           - jna rerev2.exe+595214
rerev2.exe+5951BD: FF 76 04        - push [esi+04]
rerev2.exe+5951C0: E8 CB C3 FF FF  - call rerev2.exe+591590
rerev2.exe+5951C5: 83 C4 04        - add esp,04
rerev2.exe+5951C8: 84 C0           - test al,al
rerev2.exe+5951CA: 74 05           - je rerev2.exe+5951D1
rerev2.exe+5951CC: 83 C8 FF        - or eax,-01
rerev2.exe+5951CF: EB 03           - jmp rerev2.exe+5951D4
rerev2.exe+5951D1: 8B 46 0C        - mov eax,[esi+0C]
// ---------- INJECTING HERE ----------
rerev2.exe+5951D4: 2B C7           - sub eax,edi
// ---------- DONE INJECTING  ----------
rerev2.exe+5951D6: 89 46 0C        - mov [esi+0C],eax
rerev2.exe+5951D9: 33 FF           - xor edi,edi
rerev2.exe+5951DB: 8B 74 24 14     - mov esi,[esp+14]
rerev2.exe+5951DF: 43              - inc ebx
rerev2.exe+5951E0: 83 C5 04        - add ebp,04
rerev2.exe+5951E3: 83 FB 22        - cmp ebx,22
rerev2.exe+5951E6: 72 A8           - jb rerev2.exe+595190
rerev2.exe+5951E8: 0F B6 5C 24 13  - movzx ebx,byte ptr [esp+13]
rerev2.exe+5951ED: B8 01 00 00 00  - mov eax,00000001
rerev2.exe+5951F2: 85 FF           - test edi,edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"BP"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : rerev2.exe
  Version: 
  Date   : 2024-10-01
  Author : krono

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,rerev2.exe,89 81 68 0E 00 00 C2) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [ecx+00000E68],#999999
  jmp return

code:
  mov [ecx+00000E68],eax
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 81 68 0E 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: rerev2.exe+57F7E0

rerev2.exe+57F7C9: 5B                             - pop ebx
rerev2.exe+57F7CA: C2 04 00                       - ret 0004
rerev2.exe+57F7CD: CC                             - int 3 
rerev2.exe+57F7CE: CC                             - int 3 
rerev2.exe+57F7CF: CC                             - int 3 
rerev2.exe+57F7D0: 8B 81 68 0E 00 00              - mov eax,[ecx+00000E68]
rerev2.exe+57F7D6: 8B 54 24 04                    - mov edx,[esp+04]
rerev2.exe+57F7DA: 3B C2                          - cmp eax,edx
rerev2.exe+57F7DC: 76 0B                          - jna rerev2.exe+57F7E9
rerev2.exe+57F7DE: 2B C2                          - sub eax,edx
// ---------- INJECTING HERE ----------
rerev2.exe+57F7E0: 89 81 68 0E 00 00              - mov [ecx+00000E68],eax
// ---------- DONE INJECTING  ----------
rerev2.exe+57F7E6: C2 04 00                       - ret 0004
rerev2.exe+57F7E9: C7 81 68 0E 00 00 00 00 00 00  - mov [ecx+00000E68],00000000
rerev2.exe+57F7F3: C2 04 00                       - ret 0004
rerev2.exe+57F7F6: CC                             - int 3 
rerev2.exe+57F7F7: CC                             - int 3 
rerev2.exe+57F7F8: CC                             - int 3 
rerev2.exe+57F7F9: CC                             - int 3 
rerev2.exe+57F7FA: CC                             - int 3 
rerev2.exe+57F7FB: CC                             - int 3 
rerev2.exe+57F7FC: CC                             - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"突击模式EXP"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : rerev2.exe
  Version: 
  Date   : 2024-10-01
  Author : krono

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,rerev2.exe,01 94 33 E4 44 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  add [ebx+esi+000044E4],#999999
  jmp return

code:
  add [ebx+esi+000044E4],edx
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 01 94 33 E4 44 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: rerev2.exe+5FB885

rerev2.exe+5FB858: 0F B7 44 24 12        - movzx eax,word ptr [esp+12]
rerev2.exe+5FB85D: 0D 00 0C 00 00        - or eax,00000C00
rerev2.exe+5FB862: 66 0F 5A C0           - cvtpd2ps xmm0,xmm0
rerev2.exe+5FB866: 89 44 24 18           - mov [esp+18],eax
rerev2.exe+5FB86A: F3 0F 59 45 0C        - mulss xmm0,[ebp+0C]
rerev2.exe+5FB86F: F3 0F 11 44 24 14     - movss [esp+14],xmm0
rerev2.exe+5FB875: D9 44 24 14           - fld dword ptr [esp+14]
rerev2.exe+5FB879: D9 6C 24 18           - fldcw [esp+18]
rerev2.exe+5FB87D: DF 7C 24 18           - fistp qword ptr [esp+18]
rerev2.exe+5FB881: 8B 54 24 18           - mov edx,[esp+18]
// ---------- INJECTING HERE ----------
rerev2.exe+5FB885: 01 94 33 E4 44 00 00  - add [ebx+esi+000044E4],edx
// ---------- DONE INJECTING  ----------
rerev2.exe+5FB88C: D9 6C 24 12           - fldcw [esp+12]
rerev2.exe+5FB890: 83 FF 02              - cmp edi,02
rerev2.exe+5FB893: 73 12                 - jae rerev2.exe+5FB8A7
rerev2.exe+5FB895: A1 68 E7 5D 01        - mov eax,[rerev2.exe+11DE768]
rerev2.exe+5FB89A: 8B 0C 06              - mov ecx,[esi+eax]
rerev2.exe+5FB89D: 85 C9                 - test ecx,ecx
rerev2.exe+5FB89F: 74 06                 - je rerev2.exe+5FB8A7
rerev2.exe+5FB8A1: 52                    - push edx
rerev2.exe+5FB8A2: E8 A9 1F EF FF        - call rerev2.exe+4ED850
rerev2.exe+5FB8A7: FF 75 08              - push [ebp+08]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"GOLD"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : rerev2.exe
  Version: 
  Date   : 2024-10-01
  Author : krono

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,rerev2.exe,89 BE 08 BA 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [esi+0000BA08],#9999999
  jmp return

code:
  mov [esi+0000BA08],edi
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 BE 08 BA 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: rerev2.exe+60BAA8

rerev2.exe+60BA81: 8B 7C 24 14           - mov edi,[esp+14]
rerev2.exe+60BA85: 8B 35 20 D1 57 01     - mov esi,[rerev2.exe+117D120]
rerev2.exe+60BA8B: 80 7E 1C 00           - cmp byte ptr [esi+1C],00
rerev2.exe+60BA8F: 75 09                 - jne rerev2.exe+60BA9A
rerev2.exe+60BA91: 80 3D 44 E6 5D 01 00  - cmp byte ptr [rerev2.exe+11DE644],00
rerev2.exe+60BA98: 74 0A                 - je rerev2.exe+60BAA4
rerev2.exe+60BA9A: 8D 46 04              - lea eax,[esi+04]
rerev2.exe+60BA9D: 50                    - push eax
rerev2.exe+60BA9E: FF 15 B0 F1 23 01     - call dword ptr [rerev2.exe+E3F1B0]
rerev2.exe+60BAA4: 80 7E 1C 00           - cmp byte ptr [esi+1C],00
// ---------- INJECTING HERE ----------
rerev2.exe+60BAA8: 89 BE 08 BA 00 00     - mov [esi+0000BA08],edi
// ---------- DONE INJECTING  ----------
rerev2.exe+60BAAE: 89 AE 0C BA 00 00     - mov [esi+0000BA0C],ebp
rerev2.exe+60BAB4: 75 09                 - jne rerev2.exe+60BABF
rerev2.exe+60BAB6: 80 3D 44 E6 5D 01 00  - cmp byte ptr [rerev2.exe+11DE644],00
rerev2.exe+60BABD: 74 0A                 - je rerev2.exe+60BAC9
rerev2.exe+60BABF: 8D 46 04              - lea eax,[esi+04]
rerev2.exe+60BAC2: 50                    - push eax
rerev2.exe+60BAC3: FF 15 A8 F1 23 01     - call dword ptr [rerev2.exe+E3F1A8]
rerev2.exe+60BAC9: 5F                    - pop edi
rerev2.exe+60BACA: 5E                    - pop esi
rerev2.exe+60BACB: 5D                    - pop ebp
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
